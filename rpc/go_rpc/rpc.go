// Package go_rpc is an autogenerated binder stub for package rpc.
//   gobind -lang=go golang.org/x/mobile/example/java-go-rpc/rpc
//
// File is generated by gobind. Do not edit.
package go_rpc

import (
	"golang.org/x/mobile/bind/seq"
	"golang.org/x/mobile/example/java-go-rpc/rpc"
)

const (
	proxyFrontendDescriptor = "go.rpc.Frontend"
	proxyFrontendHandleCode = 0x10a
)

type proxyFrontend seq.Ref

func (p *proxyFrontend) Handle(payload string) {
	out := new(seq.Buffer)
	out.WriteUTF16(payload)
	seq.Transact((*seq.Ref)(p), proxyFrontendHandleCode, out)
}

func proxy_Handle(out, in *seq.Buffer) {
	param_payload := in.ReadUTF16()
	rpc.Handle(param_payload)
}

func proxy_Link(out, in *seq.Buffer) {
	var param_frontend rpc.Frontend
	param_frontend_ref := in.ReadRef()
	if param_frontend_ref.Num < 0 {
		param_frontend = param_frontend_ref.Get().(rpc.Frontend)
	} else {
		param_frontend = (*proxyFrontend)(param_frontend_ref)
	}
	rpc.Link(param_frontend)
}

func init() {
	seq.Register("rpc", 1, proxy_Handle)
	seq.Register("rpc", 2, proxy_Link)
}
